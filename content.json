{"meta":{"title":"Kastrcn's blog","subtitle":"自由无二","description":"自由无二","author":"Kastrcn","url":"http://zhaotian.info"},"pages":[{"title":"about","date":"2016-08-30T00:51:26.000Z","updated":"2016-08-30T00:51:26.739Z","comments":true,"path":"about/index.html","permalink":"http://zhaotian.info/about/index.html","excerpt":"","text":""},{"title":"tags","date":"2016-08-30T12:52:18.000Z","updated":"2016-08-30T12:52:18.614Z","comments":true,"path":"TAGS/index.html","permalink":"http://zhaotian.info/TAGS/index.html","excerpt":"","text":""}],"posts":[{"title":"HTML5","slug":"HTML/HTML/HTML5","date":"2016-09-28T05:21:46.728Z","updated":"2016-09-29T15:55:32.271Z","comments":true,"path":"2016/09/28/HTML/HTML/HTML5/","link":"","permalink":"http://zhaotian.info/2016/09/28/HTML/HTML/HTML5/","excerpt":"","text":"HTML5HTML5 ≈ HTML↑ + CSS↑ + JavaScript API↑ 广义上：新一代开发Web富客户端应用程序整体解决方案 Structure → Style → Interactive 之前交互用flash 让Web开发重新回归富客户端的时代 HTML5 的应用场景 极具表现力的网页 案例非常多 网页应用程序 PC端：iCloud、百度脑图、Office 365··· APP端：淘宝、京东、美团··· WeChat端：淘宝、京东、美团··· 混合式本地应用 PC端：网易云音乐、有道词典··· APP端：淘宝、京东、美团··· 简单的游戏 HTML 分类HTML 标签 更语义化标签 应用程序标签 属性 链接关系描述 结构数据标记 ARIA 自定义属性 智能表单 新的表单类型 虚拟键盘适配 网页多媒体 音频 视频 字幕 Canvas 2D 3D (WebGL) SVG JavaScript API 核心平台提升 新的选择器 Element.classList 访问历史API 全屏API 网页存储 Application Cache localStorage sessionStorage WebSQL IndexedDB 设备信息访问 网络状态 硬件访问 设备方向 地理围栏 拖放操作 网页内拖放 桌面拖入 桌面拖出 文件 文件系统API FileReader 网络访问 XMLHttpRequest fetch WebSocket 多线程 桌面通知 CSS New Selector Web Fonts Text Styles Opacity HSL Color Rounded Corners Gradients Shadows Background Enhancements Border Image Flexible Box Model Transforms Transitions Animations HTML HTML的职责是描述一块内容是什么（或其意义） 而不是它长的什么样子，它的外观应该由CSS来决定。 标签更具有语义化的标签 应用程序标签DataList(数据列表) Progress(进度条) Meter(数值显示器) Menu(右键菜单) （Firefox Only） Details(明细) （Opera, Chrome, and in Safari 6） View Demo 语义化标签 为什么要有语义化标签?能够便于开发者阅读和写出更优雅的代码，代码如诗 同时让浏览器或是网络爬虫可以很好地解析，从而更好分析其中的内容 更好地搜索引擎优化 用来描述指定链接与当前文档的关系，便于机器理解文档结构12345678910111213&lt;link rel=\"stylesheet\" href=\"style.css\"&gt;&lt;link rel=\"alternate\" type=\"application/rss+xml\" href=\"http://myblog.com/feed\"&gt;&lt;link rel=\"shortcut icon\" href=\"favicon.ico\"&gt;&lt;link rel=\"pingback\" href=\"http://myblog.com/xmlrpc.php\"&gt;&lt;link rel=\"prefetch\" href=\"http://myblog.com/main.php\"&gt;...&lt;a rel=\"archives\" href=\"http://myblog.com/archives\"&gt;old posts&lt;/a&gt;&lt;a rel=\"external\" href=\"http://notmysite.com\"&gt;tutorial&lt;/a&gt;&lt;a rel=\"license\" href=\"http://www.apache.org/licenses/LICENSE-2.0\"&gt;license&lt;/a&gt;&lt;a rel=\"nofollow\" href=\"http://notmysite.com/sample\"&gt;wannabe&lt;/a&gt;&lt;a rel=\"tag\" href=\"http://myblog.com/category/games\"&gt;games posts&lt;/a&gt;... 常见的链接关系表 alternate 文档的可选版本（例如打印页、翻译页或镜像） stylesheet 文档的外部样式表 start 集合中的第一个文档 next 集合中的下一个文档 prev 集合中的前一个文档 contents 文档目录 index 文档索引 glossary 文档中所用字词的术语表或解释 copyright 包含版权信息的文档 chapter 文档的章 section 文档的节 subsection 文档的子段 appendix 文档附录 help 帮助文档 bookmark 相关文档 nofollow 用于指定 Google 搜索引擎不要跟踪链接 licence 一般用于文献，表示许可证的含义 tag 标签集合 friend 友情链接 结构数据标记(很高级的东西，只有Google支持) 12345678&lt;div itemscope itemtype=\"http://example.com/hello\"&gt; &lt;p&gt;我叫&lt;span itemprop=\"主人\"&gt;汪磊&lt;/span&gt;。&lt;/p&gt; &lt;p&gt; 我养了一条叫 &lt;span itemprop=\"狗名\"&gt;旺财&lt;/span&gt;的 &lt;span itemprop=\"品种\"&gt;金毛&lt;/span&gt;犬。 &lt;/p&gt;&lt;/div&gt; ARIA 属性(Accessible Rich Internet Application (无障碍富互联网应用程序)) 主要针对于屏幕阅读设备(e.g. NVDA)，更快更好地理解网页 不仅仅是为了盲人用户，更多语义化 自定义属性 data-* 通过DOM存储与DOM对象强相关的数据 123456789101112131415161718&lt;ul id=\"users\"&gt; &lt;li data-id=\"1\" data-age=\"18\" data-gender=\"true\"&gt;张三&lt;/li&gt; &lt;li data-id=\"2\" data-age=\"18\" data-gender=\"false\"&gt;李四&lt;/li&gt; &lt;li data-id=\"3\" data-age=\"18\" data-gender=\"true\"&gt;王二&lt;/li&gt;&lt;/ul&gt; &lt;script&gt; var ul = document.getElementById('users'); for (var i = 0; i &lt; ul.children.length; i++) &#123; var li = ul.children[i]; // JS 添加data属性 li.setAttribute('data-name', li.innerText); li.children[0].innerText = ''; for (var key in li.dataset) &#123; li.children[0].innerText += key + ':' + li.dataset[key] + '\\n'; &#125; &#125; &lt;/script&gt; 智能表单 网页开发过程中可以针对需求使用特定的智能表单类型 新加表单12345678&lt;input type=\"text\" required&gt;&lt;input type=\"email\" value=\"some@email.com\"&gt;&lt;input type=\"date\" min=\"2010-08-14\" max=\"2011-08-14\" value=\"2010-08-14\"&gt;&lt;input type=\"range\" min=\"0\" max=\"50\" value=\"10\"&gt;&lt;input type=\"search\" results=\"10\" placeholder=\"Search...\"&gt;&lt;input type=\"tel\" placeholder=\"(555) 555-5555\" pattern=\"^\\(?\\d&#123;3&#125;\\)?[-\\s]\\d&#123;3&#125;[-\\s]\\d&#123;4&#125;.*?$\"&gt;&lt;input type=\"color\" placeholder=\"e.g. #bbbbbb\"&gt;&lt;input type=\"number\" step=\"1\" min=\"-5\" max=\"10\" value=\"0\"&gt; 虚拟键盘适配12345&lt;input type=\"text\" name=\"txt_text\" id=\"txt_text\"&gt;&lt;input type=\"number\" name=\"txt_number\" id=\"txt_number\"&gt;&lt;input type=\"email\" name=\"txt_email\" id=\"txt_email\"&gt;&lt;input type=\"tel\" name=\"txt_tel\" id=\"txt_tel\"&gt;&lt;input type=\"url\" name=\"txt_url\" id=\"txt_url\"&gt; 网页多媒体 在此之前需要依赖于第三方插件（e.g. flash） 兼容方案：https://html5media.info/ 目标 掌握网页多媒体的意义 对Video标签和Audio标签熟练使用 了解字幕标签 音频123&lt;audio controls=\"controls\"&gt; &lt;source src=\"img/music.mp3\" type=\"audio/mpeg\"/&gt;&lt;/audio&gt; 视频1234567&lt;video controls=\"controls\"&gt; &lt;!-- 不同浏览器支持格式不一样 --&gt; &lt;source src=\"fun.ogg\" type=\"video/ogg\" /&gt; &lt;source src=\"fun.mp4\" type=\"video/mp4\" /&gt; &lt;!-- 当浏览器不兼容video标签，就会将他以div方式解析 --&gt; SHIT 你的浏览器不支持！&lt;/video&gt; 字幕12345&lt;video id=\"clip\" controls&gt; &lt;source src=\"fun.mp4\" type=\"video/mp4\" /&gt; &lt;track label=\"English subtitles\" kind=\"subtitles\" srclang=\"en\" src=\"video-subtitles-en.vtt\" default /&gt;&lt;/video&gt; SVG(Scalable Vector Graphics 可缩放矢量图形) 基于可扩展标记语言 优势：体积小，质量高，效果好，可控程度高 目标 了解SVG是什么东西 可以在网页中使用别人做好的SVG 并可以对SVG文件作出基本调整 会用样式修饰SVG 使用 SVG File 的方式 使用 标签 使用 标签 使用 标签 Ajax方式加载 Canvas(提供网页级画布（GDI+）的实现)JavaScriptAPI基础API 提升新选择器 document.querySelector(selector) 可以通过CSS选择器的语法找到DOM元素 document.querySelectorAll(‘.item’); 返回所有满足该条件的元素 一个元素类型是dom类型的数组 $(‘.item’) 返回一个jQuery对象（dom元素的数组） 本质上jquery方式和qs方式都是获取DOM数组， 只不过jquery会多一些其他成员 DOM数组的每一个成员注册事件不能像jquery一样直接注册， 必须分别给每个元素注册 h5就是将我们经常需要的操作又包装一层 元素.classList新H5中DOM对象多了一个classList属性，是一个数组 add 添加一个新的类名 remove 删除一个的类名 contains 判断是否包含一个指定的类名 toggle 切换一个class element.toggle(‘class-name’,[add_or_remove]) toggle函数的第二个参数true为添加 false删除 访问历史 API界面上的所有JS操作不会被浏览器记住，就无法回到之前的状态在HTML5中可以通过window.history操作访问历史状态，让一个页面可以有多个历史状态 window.history.forward(); // 前进 window.history.back(); // 后退 window.history.go(); // 刷新 通过JS可以加入一个访问状态 history.pushState(放入历史中的状态数据, 设置title(现在浏览器不支持)， 改变历史状态) 全屏 APIJavaScript中可以通过调用requestFullScreen()方式实现指定元素的全屏显示var element = document.querySelector(‘…’);element.requestFullScreen(); 123456789101112131415161718192021(function() &#123; // var img = document.querySelector('#img_full'); // img.addEventListener('click', function(e) &#123; // if (document.body.webkitRequestFullScreen) // document.body.webkitRequestFullScreen(); // else // console.log('不支持'); // e.preventDefault(); // &#125;); // // 注册点击时间 var h3 = document.querySelector('#title_1'); var p = document.querySelector('#content_1'); h3.addEventListener('click', function(e) &#123; if (p.webkitRequestFullScreen) p.webkitRequestFullScreen(); else console.log('不支持'); e.preventDefault(); &#125;); &#125;)() 网页存储Web Storage getItem方式获取一个不存在的键 返回空字符串 []返回 undefined 123456789101112131415&lt;script&gt; var btnSet = document.querySelector('#btn_set'); var btnGet = document.querySelector('#btn_get'); var txtValue = document.querySelector('#txt_value'); btnGet.addEventListener('click', function() &#123; // txtValue.value = sessionStorage.getItem('key1'); if (window.sessionStorage) txtValue.value = sessionStorage.getItem('key1') // txtValue.value = sessionStorage['key1']; &#125;); btnSet.addEventListener('click', function() &#123; // sessionStorage.setItem('key1', txtValue.value); sessionStorage['key1'] = txtValue.value; &#125;);&lt;/script&gt; Web SQLIndexedDB文件系统File API123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;div class=\"container\"&gt; &lt;form action=\"\"&gt; &lt;!-- 对于表单里的input来说：可以直接通过name找到 document.form[0].input_file multiple让文件域可以多选 --&gt; &lt;input id=\"input_file\" class=\"form-control hidden\" type=\"file\" name=\"input_file\" multiple&gt; &lt;input id=\"btn_select\" class=\"btn btn-info\" type=\"button\" value=\"选择文件\"&gt; &lt;!-- &lt;input id=\"btn_read\" class=\"btn btn-warning\" type=\"button\" value=\"读取文件列表\"&gt; --&gt; &lt;ul id=\"file_list\" class=\"list-group\"&gt; &lt;/ul&gt; &lt;/form&gt;&lt;/div&gt;&lt;script&gt; (function() &#123; var inputFile = document.querySelector('#input_file'); var btnRead = document.querySelector('#btn_read'); var fileList = document.querySelector('#file_list'); var btnSelect = document.querySelector('#btn_select'); btnSelect.addEventListener('click', function() &#123; // 在按钮点击时调用input的点击 inputFile.click(); &#125;); // 点击过后 // btnRead.addEventListener('click', function() &#123; // var files = inputFile.files; // for (var i = 0; i &lt; files.length; i++) &#123; // var li = document.createElement('li'); // li.setAttribute('class', 'list-group-item'); // // 创建信息的子节点 // li.innerHTML = '&lt;h5 class=\"list-group-item-heading\"&gt;' + files[i].name + '&lt;/h5&gt;&lt;p class=\"list-group-item-text\"&gt;' + files[i].lastModifiedDate.toLocaleDateString() + ' ' + files[i].lastModifiedDate.toLocaleTimeString() + ' ' + (files[i].size / 1024).toFixed(2) + 'KB&lt;/p&gt;'; // fileList.appendChild(li); // &#125; // &#125;); // 选择完成后 inputFile.addEventListener('change', function() &#123; var files = inputFile.files; for (var i = 0; i &lt; files.length; i++) &#123; var li = document.createElement('li'); li.setAttribute('class', 'list-group-item'); // 创建信息的子节点 li.innerHTML = '&lt;h5 class=\"list-group-item-heading\"&gt;' + files[i].name + '&lt;/h5&gt;&lt;p class=\"list-group-item-text\"&gt;' + files[i].lastModifiedDate.toLocaleDateString() + ' ' + files[i].lastModifiedDate.toLocaleTimeString() + ' ' + (files[i].size / 1024).toFixed(2) + 'KB&lt;/p&gt;'; fileList.appendChild(li); &#125; &#125;); &#125;)();&lt;/script&gt; FileReader拖放操作网页内拖放文件拖入123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354&lt;script&gt; (function() &#123; // 找到目标位置框框 var target = document.querySelector('#target'); var fileList = document.querySelector('#result'); // 注册拖拽进入 target.addEventListener('dragenter', function() &#123; this.classList.add('actived'); &#125;); // 离开 target.addEventListener('dragleave', function() &#123; this.classList.remove('actived'); &#125;); // 如果想要捕获drop事件 就一定得在该事件中阻止默认事件 target.addEventListener('dragover', function(e) &#123; e.preventDefault(); e.stopPropagation(); &#125;); // 当元素放到该对象上 target.addEventListener('drop', function(e) &#123; if (e.dataTransfer.files.length) &#123; var files = e.dataTransfer.files; for (var i = 0; i &lt; files.length; i++) &#123; var li = document.createElement('li'); li.setAttribute('class', 'list-group-item'); // 创建信息的子节点 li.innerHTML = '&lt;h5 class=\"list-group-item-heading\"&gt;' + files[i].name + '&lt;/h5&gt;&lt;p class=\"list-group-item-text\"&gt;' + files[i].lastModifiedDate.toLocaleDateString() + ' ' + files[i].lastModifiedDate.toLocaleTimeString() + ' ' + (files[i].size / 1024).toFixed(2) + 'KB&lt;/p&gt;'; fileList.appendChild(li); &#125; &#125; else &#123; // 短路运算 // var data = e.dataTransfer.getData('text/plain') || e.dataTransfer.getData('text/uri-list'); var data = e.dataTransfer.getData('text/plain'); if (data) &#123; // 拖入的是文本 target.innerHTML = data; &#125; else &#123; var img = document.createElement('img'); img.src = e.dataTransfer.getData('text/uri-list'); target.appendChild(img); &#125; &#125; this.classList.remove('actived'); e.preventDefault(); e.stopPropagation(); &#125;); &#125;)(); &lt;/script&gt; Moderizer(一个JavaScript针对H5特性兼容的探针)为了尽可能让IE更好地支持HTML5，你可以使用以下两种方式 Client side: 1&lt;meta http-equiv=\"X-UA-Compatible\" content=\"chrome=1\"&gt; Server side: 1X-UA-Compatible: chrome=1 HTML5 的能力已经覆盖 Offline / Storage Realtime / Communication File / Hardware Access Semantics &amp; Markup Graphics / Multimedia CSS3 Nuts &amp; Bolts","categories":[],"tags":[],"keywords":[]},{"title":"HTML常见单词","slug":"HTML/HTML常见单词","date":"2016-09-27T09:01:17.349Z","updated":"2016-09-27T09:01:17.402Z","comments":true,"path":"2016/09/27/HTML/HTML常见单词/","link":"","permalink":"http://zhaotian.info/2016/09/27/HTML/HTML常见单词/","excerpt":"","text":"Internet 互联网WWW（World Wide Web） 万维网HTTP(Hypertext Transfer Protocol) 超文本传输协议，WWW服务程序所用协议HTML(Hyper Text Markup Language) 超文本标签标示语言URL(Uniform Resource Locator) 全球资源定位器，在Internet的WWW服务程序上用于定位信息位置的标示方法Website 网站web 网页static web 静态网页dynamic web 动态网页local website 本地站点remote website 远程站点root folder 根目录（根文件夹）designer 设计模式coder 代码模式titile 标题模式index 首页（索引）anchor 锚（标记） Table 表格，表row 行column 列image 图片template 模板EditRegion 可编辑区域 form 表单action 动作method 方法target 目标textfield 文本框(单号)textArea 文本域(多行)password 密码hiden 隐藏的file 文件radiobutton 单选按钮checkbox 复选按钮select 列表/菜单submit 提交按钮reset 重置按钮button 普通按钮onClick 鼠标袋点击事件onMouseDown 鼠标左键按下消息onMouseUp 鼠标弹起消息onMouseOver 鼠标左键移动到指定区域范围内onMouseOut 鼠标移出指定区域onFocus 控件得到焦点onBlur 控制失去焦点onLoad 页面加载事件layer 层 bgcolor background color,背景颜色head (文档)头titile (文档)标题body (文档)主题META 位与 之间的一个特殊标签,用于表示网页的一些特殊环信息content 内容expires (网页)过期refresh (网页)刷新align 排列,对齐方式left 左对齐center 居中对齐right 右对齐bold 加粗italic 粗体underline 下划线superscript 上标subscript 下标ordered list 有序列表unordered list 无序列表font 字体color 颜色size 字体大小hr 换行width 宽度height 高度shade 阴影top 顶部对齐middle 居中对齐bottom 底部对齐 table 表格row 行column 列tr table rowtd table datath table headercaption 单元格标题border 边框align 对齐方式span (单元格合并)跨度bgcolor background color 背景颜色width 宽度height 高度form 表单action 动作method 方法target 目标input 输入控件name 名称id 标示 类似namevalue 值size 大小maxlength 允许输入最多字符checked 选中的submit 提交按钮reset 重置按钮button 普通按钮radiobutton 单选按钮checkbox 复选按钮select 列表/菜单option 可选项frameset 框架DHTML(dyanmic HTML) 动态网页技术CSS 样式层叠表JavaScript 网页脚本语言style 样式color 颜色font-size 字体大小font-family 字体名称font-weight 字体粗细text-align 文字对齐方向text-decoration 文本修饰,是否有下划线border-style 边框样式solid (边框样式)实线border-width 边框宽度border-color 边框颜色top 上方(位置)left 左方width 高度height 宽度z-index z方向序号link 链接import 导入 script 脚本Language 语言prompt 提示alert 警告document 文档write 写function 函数var 变量true 真false 假parse 解析 转换calculate 计算number 数字result 结果total 总共bug 错误 程序有问题的地方discount 折扣money 钱 金额 array 数组math 数学date 日期string 字符串join 连接reverse 颠倒sort 排序splice evaluation,评价 鉴定computer 计算器object 对象property 属性method 方法get 得到set 设置length 长度big 增大文本blink 文本闪烁fontcolor 确认字体颜色italics 用斜体显示字符串indexOf 查找子字符串的位置strike 显示加删除线的文本sub 将文本显示为下标toLowerCase 将字符串转换为小写toUpperCase 将字符串转换为大写check 检查random 随机round 四舍五入取整ceil 天花板floor 地板seconds 秒minuters 分hours 小时Day 天Date 日期Month 月份GMT 格林尼治标准时间UTC 协调世界时 coordinated universal time windwos 窗体document 文档内容histroy 历史onClick 鼠标单击onChange 文本内容或下拉菜单的选项发生改变onFocus 获得焦点 , 表示文本框等获得鼠标光标onBlur 失去焦点,表示文本框等失去光标onMouseOver 鼠标悬停,既鼠标停留在图片等的地方onMouseOut 鼠标移出 既离开图片等所在的区域onMouseMove 鼠标移动 表示在层等上方移动onLoad 网页文档加载事件onSubmit 表单提交事件onMouseDown 鼠标按下onMouseUp 鼠标弹起object 对象windwos object 窗体对象location object 地址栏对象document object 文档对象form object 表单对象document 表示給定浏览器窗口中的HMTL文档history 包含有关客户访问过的URL的信息location 包含有关当前URL的信息name 设置或检索窗口或框架的名称status 设置或检索窗口底部的状态栏中的信息screen 包含有关客户端的屏幕和显示性能的信息timeout 超时toolbar 工具栏scrollbars 滚动条location 地址栏statusbars 状态栏menubars 菜单栏resizable 可变窗口大小clear 清除close 关闭write 写red 红blue 蓝yellow 黄green 绿black 黑white 白pink 粉红back 后退forward 前进host 主机hostname 主机名href 超链接地址assign 分配reload 重新加载replace 替换 onBlur 文本框失去焦点onChange 文本框的值被修改onFocus 光标进入文本框中focus 获得焦点 既获得鼠标光标select 选中文本内容 ,突出显示区域readonly 只读,文本框中的内容不能修改card 卡号price 价格number 数量total 总价return 返回值 ​","categories":[],"tags":[],"keywords":[]},{"title":"CSS  基本用法","slug":"CSS/CSSbase","date":"2016-09-09T07:03:56.424Z","updated":"2016-09-29T14:37:51.991Z","comments":true,"path":"2016/09/09/CSS/CSSbase/","link":"","permalink":"http://zhaotian.info/2016/09/09/CSS/CSSbase/","excerpt":"","text":"CSS 高级选择器后代选择器.类 标签{ } 交集选择器标签.类{ } 并集选择器标签,标签{ } 通配符选择器*{ } CSS3选择器儿子选择器(只能选择儿子不能选择后代)标签&gt;标签{ } 序选择器标签:first-child{ } 标签:last-child{ } 兄弟选择器标签+标签{ } CSS特性继承性层叠性权重 权重问题大总结：id的数量,类的数量,标签的数量 1） 先看有没有选中，如果选中了，那么以（id数，类数，标签数）来计权重。谁大听谁的。如果都一样，听后写的为准。2） 如果没有选中，那么权重是0。如果大家都是0，就近原则。 行内元素&amp;块级元素 块级元素 霸占一行，不能与其他任何元素并列 能接受宽、高 如果不设置宽度，那么宽度将默认变为父亲的100% 行内元素 与其他行内元素并排 不能设置宽、高。默认的宽度，就是文字的宽度。 HTML分类&amp;CSS分类在HTML中，我们已经将标签分过类，当时分为了：文本级、容器级。 文本级：p、span、a、b、i、u、em 容器级：div、h系列、li、dt、dd CSS的分类和上面的很像，就p不一样： 所有的文本级标签，都是行内元素，除了p，p是个文本级，但是是个块级元素。 所有的容器级标签都是块级元素。 脱离文档流浮动(脱标、贴边、字围、收缩)浮动的元素脱标 浮动的元素相互贴靠 浮动元素有字围效果 清除浮动清除浮动方法1：给浮动的元素的祖先元素加高度。 清除浮动方法2：clear:both; 清除浮动方法3：隔墙法 清除浮动方法4：overflow:hidden; marigin标准文档流中，竖直方向的margin不叠加，以较大的为准。 如果不在标准流，比如盒子都浮动了，那么两个盒子之间是没有塌陷现象的： 盒子居中 使用margin:0 auto; 的盒子，必须有width，有明确的width 只有标准流的盒子，才能使用margin:0 auto; 居中。 margin:0 auto;是在居中盒子，不是居中文本。 定位 ​ 子绝父绝、子绝父相、子绝父固，都是可以给儿子定位的。但是，工程上子绝、父绝，没有一个盒子在标准流里面了，所以页面就不稳固，没有任何实战用途。工程上，“子绝父相”有意义，父亲没有脱标，儿子脱标在父亲的范围里面移动。 relative 相对定位 相对自己原来的位置，进行位置调整 不脱标，老家留坑，形影分离 作用 元素微调 做绝对定位的参考，子绝父相 absolute 绝对定位 绝对定位脱标 参考点 如果用top描述，那么定位参考点就是页面的左上角，而不是浏览器的左上角 如果用bottom描述，那么就是浏览器首屏窗口尺寸，对应的页面的左下角 一个绝对定位的元素，如果父辈元素中出现了也定位了的元素，那么将以父辈这个元素，为参考点 fixed 固定定位,IE6 不兼容。z-index z-index值表示谁压着谁。数值大的压盖住数值小的。 只有定位了的元素，才能有z-index值。也就是说，不管相对定位、绝对定位、固定定位，都可以使用z-index值。而浮动的东西不能用。 z-index值没有单位，就是一个正整数。默认的z-index值是0。 如果大家都没有z-index值，或者z-index值一样，那么谁写在HTML后面，谁在上面能压住别人。定位了的元素，永远能够压住没有定位的元素。 从父现象：父亲怂了，儿子再牛逼也没用。","categories":[],"tags":[],"keywords":[]},{"title":"Sass 基础","slug":"CSS/css tool/sassbase","date":"2016-09-09T06:58:16.592Z","updated":"2016-09-27T09:02:10.313Z","comments":true,"path":"2016/09/09/CSS/css tool/sassbase/","link":"","permalink":"http://zhaotian.info/2016/09/09/CSS/css tool/sassbase/","excerpt":"","text":"注释sass code 123/*块注释*///行注释 css code 12/*块注释*/ 变量method code $变量:值 类{ ​ 属性:$变量; } sass code 1234$bgc: #5B83AD;body&#123; background-color: $bgc;&#125; css code 123body &#123; background-color: #5B83AD;&#125; 计算method code $变量: 值; 类{ ​ top: $var*10%; } sass code 1234$var: 10;body&#123; top:$var*10%;&#125; css code 123body &#123; top: 100%;&#125; 嵌套method code 类{ ​ 类{ ​ 属性:参数; ​ } ​ 类{ ​ &amp;:伪类{ ​ 属性:参数 ​ } ​ } } sass code 12345678910div&#123; h1&#123; color:red; &#125; a&#123; &amp;:hover&#123; color: green; &#125; &#125;&#125; css code 123456div h1 &#123; color: red;&#125;div a:hover &#123; color: green;&#125; 继承method code 类{ ​ 属性:参数; } 类2{ ​ @extend:类; ​ 属性:参数; } sass code 1234567.class1&#123; color:red;&#125;.calss2&#123; @extend .class1; font-size:120%;&#125; css code 1234567.class1, .calss2 &#123; color: red;&#125;.calss2 &#123; font-size: 120%;&#125; Mixinmethod code @变量 名称{ ​ 属性:参数; } @变量 名称($变量:默认值){ ​ 属性:参数; ​ 属性:$变量; } sass code 12345678910111213@mixin top&#123; margin-top:10px;&#125;@mixin left($value:10px)&#123; float:left; margin-left:$value;&#125;div&#123; @include top;&#125;div&#123; @include left(20px);&#125; css code 12345678div &#123; margin-top: 10px;&#125;div &#123; float: left; margin-left: 20px;&#125; 插入文件method code @import “插入的文件.scss”; sass code _css.sass 1234@import &quot;_button.scss&quot;;div&#123; float:right;&#125; _button.scss 123button&#123; background-color: #fff;&#125; css code 1234567button &#123; background-color: #fff;&#125;div &#123; float: right;&#125; 逻辑运算@ifmethod code @if 逻辑判断 显示结果 sass code 12345p&#123; @if 1+1==2&#123; border:1px solid;&#125; @if 5&lt;3&#123; border:1px solid;&#125; @if null&#123; border:3px solid;&#125;&#125; css code 12p &#123; border: 1px solid; &#125; @formethod code @for 变量 form 开始值 through 结束值{ ​ 循环显示内容 .类-变量 } sass code 123@for $i from 1 through 5&#123; .item-#&#123;$i&#125; &#123;width: 2em * $i;&#125;&#125; css code 1234567891011121314.item-1 &#123; width: 2em; &#125;.item-2 &#123; width: 4em; &#125;.item-3 &#123; width: 6em; &#125;.item-4 &#123; width: 8em; &#125;.item-5 &#123; width: 10em; &#125; @eachmethod code @each 变量 in 值,值,值{ ​ .#{变量}-icon{ 变量} } sass code 12345@each $animal in puma, sea-slug, egret, salamander &#123; .#&#123;$animal&#125;-icon &#123; background-image: url(&apos;/images/#&#123;$animal&#125;.png&apos;); &#125;&#125; css code 1234567891011.puma-icon &#123; background-image: url(\"/images/puma.png\"); &#125;.sea-slug-icon &#123; background-image: url(\"/images/sea-slug.png\"); &#125;.egret-icon &#123; background-image: url(\"/images/egret.png\"); &#125;.salamander-icon &#123; background-image: url(\"/images/salamander.png\"); &#125; @whilemethod code @while 判断{ ​ .item-#{$i} {属性} } sass code 12345$i: 4;@while $i &gt; 0 &#123; .item-#&#123;$i&#125; &#123; width: 2em * $i; &#125; $i: $i - 2;&#125; css code 12345.item-4 &#123; width: 8em; &#125;.item-2 &#123; width: 4em; &#125;","categories":[],"tags":[],"keywords":[]},{"title":"CSS3 基本用法","slug":"CSS/CSS3","date":"2016-09-07T11:18:38.250Z","updated":"2016-09-29T14:34:25.325Z","comments":true,"path":"2016/09/07/CSS/CSS3/","link":"","permalink":"http://zhaotian.info/2016/09/07/CSS/CSS3/","excerpt":"","text":"css简介css3现状 浏览器支持程度差，需要添加私有前缀 移动端支持优于PC端 不断改进中 应用相对广泛 如何对待 坚持渐进增强原则 考虑用户群体 遵照产品的方案 听Boss的 准备工作统一环境 Chrome浏览器 version 46+ Firefox浏览器 firefox 42+ 基础选择器 E[attr] 表示存在attr属性即可； E[attr=val] 表示属性值完全等于val E[attr~=val] 表示的一个单独的属性值 这个属性值是以空格分隔的 E[attr|=val] 表示的要么一个单独的属性值 要么这个属性值是以“-”分隔的 E[attr*=val] 表示的属性值里包含val字符并且在“任意”位置 E[attr^=val] 表示的属性值里包含val字符并且在“开始”位置 E[attr$=val] 表示的属性值里包含val字符并且在“结束”位置 伪类选择器 重点理解E是用来参考确定其父元素的，nth-child(n) 对应根据E元素确定的父元素的所有子元素，nth-of-type(n) 的不同之处在于其对应的是只有E元素，会忽略其子元素。（此处要配合案例加强理解） E:nth-child(n) 第n个子元素，计算方法是E元素的全部兄弟元素 E:nth-of-type(n) 第n个子元素，计算方法只是E元素，会忽略其子元素的存在 E:nth-last-child(n) 同E:nth-child(n) 计算顺序相反。 E:nth-last-of-type(n) 同E:nth-of-type(n) 计算顺序相反。 关于n的取值范围： n遵循线性变化，其取值1、2、3、4、… 当n做为一个独立值时，n取值为n&gt;=1，例如nth-child(n) 当n做一个系数时，n取值为n&gt;=0者n&lt;0，例如nth-child(2n+1)、nth-child(-n+5) 处需要理解2n+1或者-n+5做为一个整体不能小于1； E:only-child 表示当前以E确定的父元素，除E之外并无其它子元素（独生子）； E:only-of-type 表示当前以E确定的父元素， 除E之外不能包含其它和E同类型的子元素； E:target 结合锚点进行使用，处于当前锚点的元素会被选中； E:empty 选中没有任何子节点的E元素； 伪元素选择器 “:” 与 “::” 区别在于区分伪类和伪元素 E::selection 可改变选中文本的样式 E::placeholder 可改变placeholder默认样式，这个存在明显的兼容问题，比如::-webkit-input-placeholder，具体参考手册进行对比。 E:after、E:before 在旧版本里是伪类，在新版本里是伪元素，新版本下E:after、E:before会被自动识别为E::after、E::before，按伪元素来对待。 颜色 新增了RGBA、HSLA模式，其中的A 表示透明度通道，即可以设置颜色值的透明度，相较opacity，不具有继承性，即不会影响子元素的透明度。 Red、Green、Blue、Alpha即RGBA Hue、Saturation、Lightness、Alpha即HSLA R、G、B 取值范围0~255 H 取值范围0~360，0/360表示黑色、120表示绿色、240表示蓝色 S 取值范围0%~100% L 取值范围0%~100% A 取值范围0~1 关于透明度 opacity子元素会继承父元素的透明度，在实际开发中会带来干扰； transparent 设置透明度时完全类似于“玻璃”一样的透明； 文本文字阴影偏移量、模糊度、颜色（可设透明度） text-shadow:左右 上下 模糊度 颜色 文本换行 normal 默认。空白会被浏览器忽略。 pre空白会被浏览器保留。其行为方式类似 HTML 中的 标签。 nowrap文本不会换行，文本会在在同一行上继续，直到遇到 标签为止。 pre-wrap保留空白符序列，但是正常地进行换行。 pre-line合并空白符序列，但是保留换行符。 inherit规定应该从父元素继承 white-space 属性的值。 边框边框圆角 可分别设置长、短半径，以“/”进行分隔，遵循“1，2，3，4”规则，“/”前面的1~4个用来设置横轴半径（分别对应横轴1、2、3、4位置 ），“/”后面1~4个参数用来设置纵轴半径（分别对应纵轴1、2、3、4位置 ） 表格运用圆角需要要 border-collapse: separate; 当圆角半径小于或等于边框宽度时，元素内角是直角 边框阴影 可以设置多重边框阴影，实现更好的效果，增强立体感 水平偏移量正值向右 负值向左 垂直正值向下 负值向上。模糊度是不能为负 关于模糊度：从一个颜色值在一定距离内进行一个渐变至透明的过程。 移量和扩展也是数学运算的，即正负会相互抵消。 偏移量和模糊度是可以相加计算，偏移量负号只代表方向。 设置边框阴影不会影响盒子的布局，即不会影响其兄弟元素的布局。 spread可以与blur、h-shadow、v-shadow相互抵消，blur不可为负值 盒模型 IE盒模型只会出现在IE5版本和IE6+的怪异模式中。 CSS3中可以通过box-sizing 来指定盒模型，即可指定为content-box、border-box; IE模型下 width = padding + content + border; W3C盒模型下 width = content box-sizing: border-box width = border + padding + content box-sizing: content-box width = content 背景 背景在CSS3中也得到很大程度的增强，比如背景图片尺寸、背景裁切区域、背景定位参照点、多重背景等。 cover会使“最大”边，进行缩放，另一边同比缩放，铺满容器，超出部分会溢出。 contain 会使“最小”边，进行缩放，另一边同比缩放，不一定铺满容器，会完整显示图片。 background-size 与 background-clip无关 background-size 与 background-origin 保持一致 渐变 渐变是CSS3当中比较丰富多彩的一个特性，通过渐变我们可以实现许多炫丽的效果，有效的减少图片的使用数量，并且具有很强的适应性和可扩展性 线性渐变线性渐变指沿着某条直线朝一个方向产生渐变效果。 关于颜色起止，可以设置多个色值的渐变，并且可以分别设置渐变的距离 方向、起始颜色、终止色； 径向渐变径向渐变指从一个中心点开始沿着四周产生渐变效果 辐射范围:其半径可以不等即可以是椭圆 中心点:中心位置参照的是盒子的左上角 颜色起止 布局伸缩布局主轴方向 flex-direction正水平:flex-direction 正竖直:column 倒水平:row-reverse 倒竖直:column-reverse 主轴方向对齐 justify-content开始收缩:flex-start 结尾收缩:flex-end 中心搜索:center 均匀收缩:space-around 对齐收缩:space-between 侧轴方向对齐 align-items上对齐:flex-start 居中:center 下对齐:flex-end 基线对齐:baseline 张开对齐:stretch 换行 flex-wrap换行 wrap 不换行 nowrap 堆栈排列 flex-wrap: wrap 设置 align-content顶部对齐:flex-start 底部对齐:flex-end 居中对齐:center 均匀对齐:space-around 对齐搜索:space-between 张开对齐:stretch flex-flow flex-direction和flex-wrap的简写形式控制子元素伸缩比例 定义flex 值display: flex; flex:$; 修改自身align-self 覆盖父元素设置的algin-items上对齐:flex-start 居中:center 下对齐:flex-end 基线对齐:baseline 张开对齐:stretch 排序规则 order指定order值 从小&gt;&gt;大; 过渡 ​ 过渡是CSS3中具有颠覆性的特征之一，可以实现元素不同状态间的平滑过渡（补间动画），经常用来制作动画效果。 贝塞尔曲线限定了过渡的轨迹。 帧动画：通过一帧一帧的关键画面按照固定顺序和速度播放。如电影胶片 补间动画：自动完成从起始状到终止状的的过度。 设置过渡属性 :transition-property 设置过渡时间:transition-duration 设置过渡速度:transition-timing-function 设置过渡延时:transition-delay 动画动画名称 ​ animation-name:名字 动画持续时间 ​ animation-duration:1s 动画结束后的状态 ​ animation-fill-mode:forwards 无限次播放 ​ animation-iteration-count: infinite; 动画延时 ​ animation-delay: 1s 动画暂停 ​ animation-play-state: paused; 动画反方向 ​ animation-direction: alternate; 动画速度 ​ animation-timing-function: linear; 转换旋转(rotate)基础旋转通过 rotate() 方法，元素可以实现旋转效果，允许负值，元素将逆时针旋转。 transform: rotate(45deg)、transform: rotate(-90deg) 沿轴旋转通过 rotateX()、rotateY()、 rotateZ()可以实现X、Y、Z轴上的旋转 transform: rotateX(45deg)、 transform: rotateY(90deg)、 transform: rotateX(45deg) 缩放(scale)通过 scale() 方法，可以更改元素的尺寸，可以分别调整x和y两个方向的大小 transform: scale(x, y) x或y可以是小数 倾斜 (skew)transform: skew(45deg); 移动 (translate )通过 translate() 方法，可以使元素从其当前位置移动，通过设置水平(x轴)和垂直(y轴)距离实现 transform: translate(x, y) 转换位置指定origin的位置进行旋转 transform-origin:left left/right top/bottom; 媒体查询link 方式123&lt;link rel=\"stylesheet\" media=\"screen and (max-width:600px)\" href=\"./css/blue.css\"&gt;&lt;link rel=\"stylesheet\" media=\"screen and (min-width:900px)\" href=\"./css/red.css\"&gt;&lt;link rel=\"stylesheet\" media=\"screen and (min-width:1200px)\" href=\"./css/yellow.css\"&gt; css方式1234567891011121314151617&lt;style&gt; @media screen and (max-width:600px) &#123; body &#123; background-color: blue; &#125; &#125; @media screen and (min-width:900px) &#123; body &#123; background-color: red; &#125; &#125; @media screen and (min-width:1200px) &#123; body &#123; background-color: yellow; &#125; &#125;&lt;/style&gt; web字体 ​ 开发人员可以为自已的网页指定特殊的字体，无需考虑用户电脑上是否安装了此特殊字体，从此把特殊字体处理成图片的时代便成为了过去。 ​ 支持程度比较好，甚至IE低版本浏览器也能支持。 字体格式TureTpe(.ttf)格式​ .ttf字体是Windows和Mac的最常见的字体，是一种RAW格式，支持这种字体的浏览器有IE9+、Firefox3.5+、Chrome4+、Safari3+、Opera10+、iOS Mobile、Safari4.2+； OpenType(.otf)格式​ .otf字体被认为是一种原始的字体格式，其内置在TureType的基础上，支持这种字体的浏览器有Firefox3.5+、Chrome4.0+、Safari3.1+、Opera10.0+、iOS Mobile、Safari4.2+； Web Open Font Format(.woff)格式​ woff字体是Web字体中最佳格式，他是一个开放的TrueType/OpenType的压缩版本，同时也支持元数据包的分离，支持这种字体的浏览器有IE9+、Firefox3.5+、Chrome6+、Safari3.6+、Opera11.1+； Embedded OpenType(.eot)格式​ .eot字体是IE专用字体，可以从TrueType创建此格式字体，支持这种字体的浏览器有IE4+； SVG(.svg)格式​ .svg字体是基于SVG字体渲染的一种格式，支持这种字体的浏览器有Chrome4+、Safari3.1+、Opera10.0+、iOS Mobile Safari3.2+； web图标 常见的是把网页常用的一些小的图标，借助工具帮我们生成一个字体库，然后就可以像使用文字一样使用图标了。 优点 将所有图标打包成字体库，减少请求 具有矢量性，可保证清晰度 使用灵活，便于维护 拓展 Font Awesome 使用介绍 ​ http://fontawesome.dashgame.com/ 定制自已的字体图标库 ​ http://iconfont.cn/ ​ https://icomoon.io/ SVG ​ http://www.iconsvg.com/ 兼容性通过http://caniuse.com/ 可查询CSS3各特性的支持程度，一般兼容性处理的常见方法是为属性添加私有前缀，如不能解决，应避免使用，无需刻意去处理CSS3的兼容性问题。","categories":[],"tags":[],"keywords":[]},{"title":"Less 基础","slug":"CSS/css tool/lessbase","date":"2016-09-05T03:01:34.219Z","updated":"2016-09-27T09:02:09.201Z","comments":true,"path":"2016/09/05/CSS/css tool/lessbase/","link":"","permalink":"http://zhaotian.info/2016/09/05/CSS/css tool/lessbase/","excerpt":"","text":"Variablesmethod code @ Variables=value; class{ ​ Variables:value; } less code 1234@bgc: #5B83AD;body&#123; background-color: @bgc;&#125; css code 123body &#123; background-color: #5B83AD;&#125; 嵌套规则块嵌套method code .class{ ​ width:100px; } #id{ ​ .class } less code 123456.header&#123; width: 100px;&#125;#top&#123; .header&#125; css code 123456.header &#123; width: 100px;&#125;#top &#123; width: 100px;&#125; &amp;嵌套method code .class{ ​ &amp;:virtual class{ ​ Variables:value; ​ } } less code 123456.class&#123; &amp;:hover&#123; color:red; &#125;;&#125; css code 123.class:hover &#123; color: red;&#125; Mixinmethod code .method(@Variables:default){ ​ Variables:@Variables; } less code 12345678910111213/* 定义一个类 */.roundedCorners(@radius: 5px) &#123; -moz-border-radius: @radius; -webkit-border-radius: @radius; border-radius: @radius;&#125;/* 定义的类应用到另个一个类中 */＃header &#123; .roundedCorners;&#125;#footer &#123; .roundedCorners(10px);&#125; css code 123456789101112/* 定义一个类 *//* 定义的类应用到另个一个类中 */＃header &#123; -moz-border-radius: 5px; -webkit-border-radius: 5px; border-radius: 5px;&#125;#footer &#123; -moz-border-radius: 10px; -webkit-border-radius: 10px; border-radius: 10px;&#125; Import 我们可以在开发阶段将样式放到多个文件中，最后通过@import 的方式合并 method code @import url(‘*.less’); less code _css.less 1234@import url('_bgc.less');body&#123; background-color: @bgc;&#125; _bgc.less 1@bgc: #5B83AD; css code 123body &#123; background-color: #5B83AD;&#125;","categories":[],"tags":[],"keywords":[]},{"title":"Font 果圆","slug":"Font/果圆","date":"2016-09-04T08:08:44.306Z","updated":"2016-09-04T08:29:24.976Z","comments":true,"path":"2016/09/04/Font/果圆/","link":"","permalink":"http://zhaotian.info/2016/09/04/Font/果圆/","excerpt":"","text":"A A-E B C D E F G H H、K I J K L L-P M N O P Q Q-U R S T U V W W-Z X Y Z A-Z Demo","categories":[],"tags":[],"keywords":[]},{"title":"markdown base","slug":"MarkDown/mdbase","date":"2016-09-04T04:59:08.084Z","updated":"2016-09-03T01:12:15.823Z","comments":true,"path":"2016/09/04/MarkDown/mdbase/","link":"","permalink":"http://zhaotian.info/2016/09/04/MarkDown/mdbase/","excerpt":"","text":"兼容HTMLstyle code test .md code12345&lt;table&gt; &lt;tr&gt; &lt;td&gt;test&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; html code12345&lt;table&gt; &lt;tr&gt; &lt;td&gt;test&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 特殊字符自动转换(转换成HTML需要的格式)style code &copy; AT&amp;T 4&lt;5 .md code 12345&amp;copy;AT&amp;T 4&amp;lt;5 .html code1234style code&amp;copy;AT&amp;amp;T 4&amp;lt;5 区块元素段落和换行style code first row second row .md code12345style codefirst rowsecond row html code123&lt;p&gt;style code&lt;/p&gt;&lt;p&gt;first row&lt;/p&gt;&lt;p&gt;second row&lt;/p&gt; 标题style code This is an H1This is an H2.md code1234This is an H1 //任何数量的 = 和 - 都可以有效果。-----This is an H2====== html code12&lt;h2 id=\"this-is-an-h1\"&gt;This is an H1&lt;/h2&gt;&lt;h1 id=\"this-is-an-h2\"&gt;This is an H2&lt;/h1&gt; #style code This H1This H2This H3This H4This H5This H6.md code123456# This H1## This H2### This H3#### This H4#### This H5###### This H6 html code123456&lt;h1 id=\"this-h1\"&gt;This H1&lt;/h1&gt;&lt;h2 id=\"this-h2\"&gt;This H2&lt;/h2&gt;&lt;h3 id=\"this-h3\"&gt;This H3&lt;/h3&gt;&lt;h4 id=\"this-h4\"&gt;This H4&lt;/h4&gt;&lt;h4 id=\"this-h5\"&gt;This H5&lt;/h4&gt;&lt;h6 id=\"this-h6\"&gt;This H6&lt;/h6&gt; 区块引用Blockquotes引言style code Grade one Level twoLevel two Grade one .md code 1234&gt; Grade one&gt;&gt;Level two&gt;&gt;Level two&gt;Grade one html code12345678&lt;blockquote&gt;Grade one&lt;blockquote&gt;Level twoLevel two&lt;/blockquote&gt;Grade one&lt;/blockquote&gt; 列表无序列表style code ul ul ul ul ul ul .md code 123456* ul //三种符号都适用 * + -* ul+ ul+ ul- ul- ul html code12345678&lt;ul&gt;&lt;li&gt;ul&lt;/li&gt;&lt;li&gt;ul&lt;/li&gt;&lt;li&gt;ul&lt;/li&gt;&lt;li&gt;ul&lt;/li&gt;&lt;li&gt;ul&lt;/li&gt;&lt;li&gt;ul&lt;/li&gt;&lt;/ul&gt; 有序列表style code ol ol ol .md code 1231. ol //行首出现数字-句点-空白，要避免这样的状况，你可以在句点前面加上反斜杠。2. ol3. ol html code 12345&lt;ol&gt;&lt;li&gt;ol&lt;/li&gt;&lt;li&gt;ol&lt;/li&gt;&lt;li&gt;ol&lt;/li&gt;&lt;/ol&gt; 代码区块style code1234public void test()&#123; return&#125; .md code 1234public void test() ///缩进 4 个空格或是 1 个制表符&#123; return&#125; html code 123456&lt;pre&gt; public void test() &#123; return &#125;&lt;/pre&gt; 分割线style code .md code 123456789* * *********- - ---------------------------------------- html code 12345&lt;hr&gt;&lt;hr&gt;&lt;hr&gt;&lt;hr&gt;&lt;hr&gt; 区段元素链接style code http://zhaotian.info/ This is zhaotian.info inline link. This is About inline link. This is zhaotian info reference-style link. Google I get 10 times more traffic from Google than fromYahoo or MSN. .md code123456789101112131415161718192021&lt;http://zhaotian.info/&gt;This is [zhaotian.info](http://zhaotian.info/ &quot;blog&quot;) inline link.This is [About](/about/) inline link.This is [zhaotian info] [link] reference-style link.[link]: (http://zhaotian.info/) &quot;blog&quot;[Google][][Google]: http://google.com/I get 10 times more traffic from [Google] [1] than from[Yahoo] [2] or [MSN] [3]. [1]: http://google.com/ &quot;Google&quot; [2]: http://search.yahoo.com/ &quot;Yahoo Search&quot; [3]: http://search.msn.com/ &quot;MSN Search&quot; html code 1234567&lt;p&gt;&lt;a href=&quot;http://zhaotian.info/&quot;&gt;http://zhaotian.info/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;This is &lt;a href=&quot;http://zhaotian.info/&quot; title=&quot;blog&quot;&gt;zhaotian.info&lt;/a&gt; inline link.&lt;/p&gt;&lt;p&gt;This is &lt;a href=&quot;/about/&quot;&gt;About&lt;/a&gt; inline link.&lt;/p&gt;&lt;p&gt;This is &lt;a href=&quot;(http://zhaotian.info/)&quot; title=&quot;blog&quot;&gt;zhaotian info&lt;/a&gt; reference-style link.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://google.com/&quot;&gt;Google&lt;/a&gt;&lt;/p&gt;&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot; title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt; or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt; ##邮箱 style code &#107;&#97;&#x73;&#x74;&#114;&#x63;&#x6e;&#64;&#x6f;&#117;&#116;&#x6c;&#x6f;&#x6f;&#x6b;&#46;&#x63;&#111;&#x6d; .md code 1&lt;kastrcn@outlook.com&gt; html code1&lt;a href=&quot;mailto:kastrcn@outlook.com&quot;&gt;&amp;#x6b;&amp;#97;&amp;#115;&amp;#x74;&amp;#114;&amp;#99;&amp;#110;&amp;#x40;&amp;#x6f;&amp;#117;&amp;#x74;&amp;#x6c;&amp;#x6f;&amp;#111;&amp;#107;&amp;#46;&amp;#x63;&amp;#x6f;&amp;#x6d;&lt;/a&gt; 强调style code single asterisks single underscores double asterisks double underscores .md code 1234567*single asterisks*_single underscores_**double asterisks**__double underscores__ html code1234567&lt;em&gt;single asterisks&lt;/em&gt;&lt;em&gt;single underscores&lt;/em&gt;&lt;strong&gt;double asterisks&lt;/strong&gt;&lt;strong&gt;double underscores&lt;/strong&gt; 代码style code Use the printf() function. There is a literal backtick (`) here. .md code123Use the `printf()` function.``There is a literal backtick (`) here.`` html code 12&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt; 图片style code .md code 1234![Alt text](http://ocszc90a3.bkt.clouddn.com/mdimg.png)![Alt text][id][id]: http://ocszc90a3.bkt.clouddn.com/mdimg.png &quot;picture&quot; html code 12&lt;img src=&quot;http://ocszc90a3.bkt.clouddn.com/mdimg.png&quot; alt=&quot;Alt text&quot;&gt;&lt;img src=&quot;http://ocszc90a3.bkt.clouddn.com/mdimg.png&quot; alt=&quot;Alt text&quot; title=&quot;picture&quot;&gt; 其他反斜杠style code \\ 反斜线 ` 反引号 * 星号 _ 底线 {} 花括号 [] 方括号 () 括弧 # 井字号 + 加号 - 减号 . 英文句点 ! 惊叹号 .md code 1234567891011121314151617181920212223\\\\ 反斜线\\` 反引号\\* 星号\\_ 底线\\&#123;&#125; 花括号\\[] 方括号\\() 括弧\\# 井字号\\+ 加号\\- 减号\\. 英文句点\\! 惊叹号 html code 1234567891011121314151617181920212223\\ 反斜线` 反引号* 星号_ 底线&#123;&#125; 花括号[] 方括号() 括弧# 井字号+ 加号- 减号. 英文句点! 惊叹号","categories":[],"tags":[],"keywords":[]},{"title":"GIT Basics","slug":"GIT/gitbase","date":"2016-09-04T04:59:08.081Z","updated":"2016-09-01T03:01:55.791Z","comments":true,"path":"2016/09/04/GIT/gitbase/","link":"","permalink":"http://zhaotian.info/2016/09/04/GIT/gitbase/","excerpt":"","text":"初始化12cd 项目目录$ git init 查看本地仓库状态1$ git status 添加文件本地所有文件1$ git add . 推送并填写提交信息1$ git commit -m &apos;提交信息&apos; 分支创建分支1$ git branch 分支名称 切换分支1$ git checkout 分支名称 提交远端指定分支1$ git push origin 本地分支:远端分支 查看分支1$ git branch 查看全部分支1$ get branch -a 拉取1$ git push 克隆1$ git clone https://github.com/kastrcn/XXX.git ##查看当前版本1$ git --version","categories":[],"tags":[],"keywords":[]},{"title":"CSS  Alphabet","slug":"CSS/常用词汇","date":"2016-09-04T04:59:08.080Z","updated":"2016-09-01T13:56:30.504Z","comments":true,"path":"2016/09/04/CSS/常用词汇/","link":"","permalink":"http://zhaotian.info/2016/09/04/CSS/常用词汇/","excerpt":"","text":"Aabsolute [‘æbsəlu:t] 绝对的，完全的active [‘æktiv] 活动的，激活的，标记的一个伪类align [ə’lain] 对齐alpha [‘ælfə] 透明度，半透明anchor [‘æŋkə] 锚记标记是这个单词的缩写arrow [‘ærəu] 箭头auto [‘ɔ:təu] 自动的Bbackground [‘bækgraund] 背景banner [‘bænə] 网幅广告, 旗帜广告, 横幅广告 (网络广告的主要形式, 一般使用GIF格式的图像文件, 可以使用静态图形, 也可用多帧图像拼接为动画图像)black [blæk] 黑色blink： [bliŋk] 闪亮,闪烁block [blɔk] 块blue [blu:] 蓝色body [‘bɔdi] 主体，一个HTML标记bold [bəuld] 加粗border [‘bɔ:də] 边框、框线 边框both [bəuθ] 两者(都);两个(都);是clear属性的一个属性值bottom [‘bɔtəm] 底;底部，是一个CSS属性box [bɔks] 箱;盒;匣br 换行标记bug [bʌg] 程序设计上的错误，漏洞等building [‘bildiŋ] 建筑button [‘bʌtn] 按钮Ccell [sel] 表格中的单元格center [‘sentə] 居中centimeter [‘senti,mi:tə] 厘米child [tʃaild] 孩子circle [‘sə:kl] 圆圈class [klɑ:s] 类别clear [kliə] 清除cm 厘米color [‘kʌlə] 颜色connected [kə’nektid] 连结的contact [‘kɔntækt] 联系content [kən’tent] 内容crosshair 十字准线css 层叠样式表cursor [‘kə:sə] 鼠标指针Ddashed [dæʃt] 虚线CSS边框常用的一种decimal [‘desiməl] 十进制decoration [,dekə’reiʃən] 装饰default [di’fɔ:lt] 默认的definition [,defi’niʃən] 定义design [di’zain] 设计display [di’splei ] 显示，CSS的一个属性division [di’viʒən] 分区，div就是这个单词的缩写document [‘dɔkjumənt] 文件文档dotted [‘dɔtid] 点线double [‘dʌbl] 双线Eelement [‘elimənt] 元素Ffather [‘fɑ:ðə] 父亲,父filter [‘filtə] 过滤层；滤器first [fə:st] 第一个fixed [fikst] 固定的，不变的float [fləut] 浮动font [fɔnt] 字体for 在循环语句中的一个保留字four 4个##G gif 一种图像格式gray [grei] 灰色green [gri:n] 绿色Hhack [hæk] 常用于CSS中的一些招数，或者类似于偏方的技巧hand [hænd] 手head [hed] 头部height [hait] 高度help [help] 帮助here [hiə] 这里hidden [‘hidn] 被隐藏home [həum] 首页horizontal [,hɔri’zɔntl] 水平的hover [‘hʌvə] 鼠标指针经过或称为悬浮状态Iimage [‘imidʒ] 图像important [im’pɔ:tənt] 重要的indent [in’dent] 缩进index [‘indeks] 索引inline 行内inner 内部的italic [i’tælik] 意大利体，斜体Jjpg 一种图像格式justify [‘dʒʌstifai] 两端对齐Llanguage [‘læŋgwidʒ] 语言last [lɑ:st] 最后一个left [left] 左边length [leŋθ] 长度level [‘levl] 级别，例如block-level就是块级line [lain] 线link [liŋk] 链接list [list] 列表lowercase [‘ləuə,keis] 小写Mmargin [‘mɑ:dʒin] 外边距max 最大的medium [‘mi:diəm] 中间menu [‘menju:] 菜单middle [‘midl] 中间millimeter [‘mili,mi:tə] 毫米min 最小的model [‘mɔdl] 模型move [mu:v] 移动Nnavigation [,nævi’geiʃən] 导航new [nju:] 新的none [nʌn] 无，没有normal [‘nɔ:məl] 标准Oobject [‘ɔbdʒikt] 对象oblique [əb’li:k] 一种斜体one 一个only [‘əunli] 仅仅open [‘əupən] 打开optional [‘ɔpʃənəl] 可选的orange [‘ɔ:rindʒ] 橙色outer [‘autə] 外面的overflow [,əuvə’fləu] 溢出Ppadding [‘pædiŋ] 内边距point [pɔint] 点pointer [‘pɔintə] 指针，指示器position [pə’ziʃən] 定位，位置progress [‘prəugres] 进度public [‘pʌblik] 公开的purple [‘pə:pl] 紫色Rred [red] 红色relative [‘relətiv] 相对的repeat [ri’pi:t] 重复，平铺replacement[ri’pleismənt] 替换resize 重新设置大小right [rait] 右边row [rəu] 行Sscroll [skrəul] 滚动shadow [‘ʃædəu] 阴影silver [‘silvə] 银色size [saiz] 尺寸solid [‘sɔlid] 固体，实线solution [sə’lu:ʃən] 方案son [sʌn] 儿子span [spæn] 一个HTML标记special [‘speʃəl] 特殊的square [skwɛə] 方块static [‘stætik] 静态的strong [strɔŋ] 强壮，加粗的style [stail] 样式Ttable [‘teibl] 表格td 单元格的HTML标记text [tekst] 文本thick [θik] 粗的thin [θin] 细的three [θi:] 三个through [θru:] 穿过title [‘taitl] 标题top [tɔp] 顶部tr 表格中“行”的HTML标记transitional [træn’ziʃənəl] 过渡的two 两个type [taip] 类型Uunderline [,ʌndə’lain] 下划线upper [‘ʌpə] 上面的uppercase [‘ʌpə,keis] 大写url 网址vvertical [‘və:tikəl] 竖直的visited [‘vizit] 访问过的wwhile [hwail] 白色的width [widθ] 宽度Yyellow [‘jeləu] 黄色","categories":[],"tags":[],"keywords":[]},{"title":"To start a day","slug":"oneday","date":"2016-09-04T04:59:08.078Z","updated":"2016-08-30T14:10:33.830Z","comments":true,"path":"2016/09/04/oneday/","link":"","permalink":"http://zhaotian.info/2016/09/04/oneday/","excerpt":"","text":"Quick Startjust do IT!","categories":[],"tags":[],"keywords":[]}]}